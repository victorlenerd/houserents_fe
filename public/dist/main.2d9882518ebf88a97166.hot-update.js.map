{"version":3,"sources":["webpack:///./src/containers/areas/index.js"],"names":["Areas","props","getAreasRange","state","no_bed","no_bath","no_toilets","mode","Predict","locations","areas","map","lat","lng","specs","prices","setState","P","Math","round","getAddressRange","tno_bed","tno_bath","tno_toilets","currentArea","areaPrice","updateOption","e","topFilter","name","target","value","setTimeout","handleChange","centerChange","center","sort","type","pairAreaPrice","A","i","a","p","sortedPairs","b","sp","majorAreasData","parseFloat","toLocaleString","length","parsedPrice","React","Component"],"mappings":"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","file":"main.2d9882518ebf88a97166.hot-update.js","sourcesContent":["import React from 'react';\nimport Filter from '../../components/filter';\nimport Footer from '../../components/footer';\n\nimport majorAreasData from '../../areas';\n\nimport Predict from '../../utils/predict';\nimport $ from 'jquery';\n\nclass Areas extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            no_bed: 1,\n            no_bath: 1,\n            no_toilets: 1,\n    \n            tno_bed: 1,\n            tno_bath: 1,\n            tno_toilets: 1,\n    \n            currentArea: {\n                lat: 6.5005,\n                lng: 3.3666\n            },\n            prices: [],\n            areaPrice: 0,\n            mode: true,\n            sort: 'high',\n        }\n    }\n    \n    componentDidMount () {    \n        this.setState({\n            areas: majorAreasData()\n        }, () => {\n            this.getAddressRange();\n            this.getAreasRange();\n        });\n    }\n    \n    getAreasRange = async () => {\n        const { no_bed, no_bath, no_toilets, mode } = this.state;\n    \n        const { prices } = await Predict({ \n            locations: this.state.areas.map(({ lat, lng }) => ({ lat, lng })), \n            specs: { no_bed, no_bath, no_toilets }\n        }, mode);\n    \n        this.setState({\n            prices: prices.map((P) => Math.round(P))\n        });\n    }\n    \n    getAddressRange = async () => {\n        const { tno_bed: no_bed, tno_bath: no_bath, tno_toilets: no_toilets, currentArea: { lat, lng }, mode } = this.state;\n    \n        const { prices } = await Predict({ \n            locations: [{ lat, lng }], \n            specs: { no_bed, no_bath, no_toilets }\n        }, mode);\n    \n        this.setState({\n            areaPrice:  Math.round(prices[0])\n        });\n    }\n    \n    updateOption = (e, topFilter) => {\n        let name = (!topFilter) ? e.target.name : `t${e.target.name}`;\n        let value = e.target.value; \n    \n        this.setState({\n            [name]: value\n        }, () => {\n            setTimeout(\n                (!topFilter) ? this.getAreasRange : this.getAddressRange\n            , 500);\n        });\n    }\n    \n    handleChange = () => {\n        this.setState({\n            mode: !this.state.mode\n        }, () => {\n            this.getAddressRange();\n            this.getAreasRange();\n        });\n    }\n    \n    centerChange = center => {\n        this.setState({ \n        currentArea: {\n            lat: center.lat(),\n            lng: center.lng()\n        }\n        }, this.getAddressRange);\n    }\n    \n    sort = (e) => {\n        let type = e.target.value;\n        let pairAreaPrice = this.state.areas.map((A, i)=> ({ a: A, p: this.state.prices[i]}))\n        \n        let sortedPairs = (type !== 'high') ? \n            pairAreaPrice.sort((a, b) => a.p - b.p) : \n            pairAreaPrice.sort((a, b) => b.p - a.p);\n\n        this.setState({\n            prices: sortedPairs.map((sp) => sp.p),\n            areas: sortedPairs.map((sp) => sp.a)\n        });\n    }\n\n    render () {\n        const { areas, prices } = this.state;\n\n        return (\n            <section>\n                <div className=\"container\">\n                    <div className=\"col-lg-8 col-lg-offset-2 col-md-12 col-sm-12 col-xs-12\">\n                        <div className=\"col-lg-9 col-md-9 col-sm-8 col-xs-12\">\n                        <Map onCenterChange={this.centerChange} />\n                        </div>\n                        <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-12 input-container\">\n                        <Filter updateOption={e => this.updateOption(e, true)} />\n                        <br />\n                        <div className=\"price-top\">\n                            <span>Total Cost:</span>\n                            <h4>â‚¦{parseFloat(100).toLocaleString('en')}</h4>\n                        </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"container\">\n                    <Filter showSort={true} sort={this.sort} updateOption={this.updateOption} />\n                    <div className=\"col-lg-8 col-lg-offset-2 col-md-8 col-md-offset-2 col-sm-12 col-xs-12\">              \n                        <div className=\"input-container col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                            {prices.length > 1 && <ul className=\"areas-list\" type=\"none\">\n                                {areas.map((a, i) => {\n                                    const parsedPrice = parseFloat(prices[i]);\n                                    \n                                    if (parsedPrice < 1) return null;\n\n                                    return (\n                                        <li key={i}>\n                                            {a.name}\n                                            <div className=\"price\">\n                                                <span>â‚¦{parsedPrice.toLocaleString('en')}</span>\n                                            </div>\n                                        </li>\n                                    )\n                                })}\n                            </ul>}\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Areas;"],"sourceRoot":""}