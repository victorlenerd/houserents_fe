{"version":3,"sources":["webpack:///./src/server.js"],"names":["path","require","express","webpack","webpackDevMiddleware","app","config","compiler","PORT","process","use","static","join","__dirname","publicPath","output","hot","writeToDisk","historyApiFallback","get","req","res","console","log","resolve","listen"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAMA,IAAI,GAAGC,mBAAO,CAAC,kBAAD,CAApB;;AACA,IAAMC,OAAO,GAAGD,mBAAO,CAAC,wBAAD,CAAvB;;AACA,IAAME,OAAO,GAAGF,mBAAO,CAAC,wBAAD,CAAvB;;AACA,IAAMG,oBAAoB,GAAGH,mBAAO,CAAC,sDAAD,CAApC;;AAEA,IAAMI,GAAG,GAAGH,OAAO,EAAnB;;AACA,IAAMI,MAAM,GAAGL,mBAAO,CAAC,yCAAD,CAAtB;;AACA,IAAMM,QAAQ,GAAGJ,OAAO,CAACG,MAAM,CAAC,CAAD,CAAP,CAAxB;AAEA,IAAME,IAAI,GAAGC,MAAb;AAEAJ,GAAG,CAACK,GAAJ,CAAQ,SAAR,EAAkBR,OAAO,CAACS,MAAR,CAAeX,IAAI,CAACY,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAlB;AAEAR,GAAG,CAACK,GAAJ,CAAQN,oBAAoB,CAACG,QAAD,EAAW;AACnCO,YAAU,EAAER,MAAM,CAAC,CAAD,CAAN,CAAUS,MAAV,CAAiBD,UADM;AAEnCE,KAAG,EAAE,IAF8B;AAGnCC,aAAW,EAAE,IAHsB;AAInCC,oBAAkB,EAAE;AAJe,CAAX,CAA5B;AAOAb,GAAG,CAACK,GAAJ,CAAQT,mBAAO,CAAC,sDAAD,CAAP,CAAkCM,QAAlC,CAAR;AAEAF,GAAG,CAACc,GAAJ,CAAQ,IAAR,EAAc,UAACC,GAAD,EAAMC,GAAN,EAAc;AACxBC,SAAO,CAACC,GAAR,CAAYvB,IAAI,CAACwB,OAAL,CAAaX,SAAb,EAAwB,QAAxB,EAAkC,YAAlC,CAAZ;AACH,CAFD;AAIAR,GAAG,CAACoB,MAAJ,CAAWjB,IAAX,EAAiB;AAAA,SAAMc,OAAO,CAACC,GAAR,iCAAqCf,IAArC,EAAN;AAAA,CAAjB;;;;;;;;;;0BArBMH,G;0BAEAE,Q;0BAEAC,I","file":"main.45aaa91c60895930abf7.hot-update.js","sourcesContent":["const path = require('path');\nconst express = require('express');\nconst webpack = require('webpack');\nconst webpackDevMiddleware = require('webpack-dev-middleware');\n\nconst app = express();\nconst config = require('../config.dev.js');\nconst compiler = webpack(config[1]);\n\nconst PORT = process.env.PORT;\n\napp.use('/public',express.static(path.join(__dirname, 'public')))\n\napp.use(webpackDevMiddleware(compiler, {\n    publicPath: config[1].output.publicPath,\n    hot: true,\n    writeToDisk: true,\n    historyApiFallback: true\n}));\n\napp.use(require(\"webpack-hot-middleware\")(compiler));\n\napp.get(\"/*\", (req, res) => {\n    console.log(path.resolve(__dirname, 'public', 'index.html'));\n});\n\napp.listen(PORT, () => console.log(`App listening on port ${PORT}`));"],"sourceRoot":""}