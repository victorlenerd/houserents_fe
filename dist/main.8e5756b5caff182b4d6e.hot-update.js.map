{"version":3,"sources":["webpack:///./src/components/search/index.js"],"names":["Search","props","state","currentArea","lat","lng","areaPrice","setState","window","__DATA__","singleAreaPrice","prevProps","no_bath","no_bed","no_toilets","getAddressRange","Predict","locations","specs","prices","Math","round","center","centerChange","parseFloat","toLocaleString","React","Component","propTypes","PropTypes","number"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;;IAEMA,M;;;;;AACF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,0MAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,iBAAW,EAAE;AACTC,WAAG,EAAE,MADI;AAETC,WAAG,EAAE;AAFI,OADJ;AAKTC,eAAS,EAAE;AALF,KAAb;AAHe;AAUlB;;;;wCAEoB;AACjB,WAAKC,QAAL,CAAc;AACVD,iBAAS,EAAEE,MAAM,CAACC,QAAP,CAAgBC;AADjB,OAAd;AAGH;;;uCAEkBC,S,EAAW;AAC1B,UAAI,KAAKV,KAAL,CAAWW,OAAX,KAAuBD,SAAS,CAACC,OAAjC,IACA,KAAKX,KAAL,CAAWY,MAAX,KAAsBF,SAAS,CAACE,MADhC,IAEA,KAAKZ,KAAL,CAAWa,UAAX,KAA0BH,SAAS,CAACG,UAFxC,EAEoD;AAChD,aAAKC,eAAL,CAAqB;AACjBF,gBAAM,EAAE,KAAKZ,KAAL,CAAWY,MADF;AAEjBD,iBAAO,EAAE,KAAKX,KAAL,CAAWW,OAFH;AAGjBE,oBAAU,EAAE,KAAKb,KAAL,CAAWa;AAHN,SAArB;AAKH;AACJ;;;;;;;;;;;;;AAEwBD,sB,QAAAA,M,EAAQD,O,QAAAA,O,EAASE,U,QAAAA,U;wCACC,KAAKZ,K,CAApCC,W,EAAeC,G,yBAAAA,G,EAAKC,G,yBAAAA,G;;uBAEHW,+DAAO,CAAC;AAC7BC,2BAAS,EAAE,CAAC;AAAEb,uBAAG,EAAHA,GAAF;AAAOC,uBAAG,EAAHA;AAAP,mBAAD,CADkB;AAE7Ba,uBAAK,EAAE;AAAEL,0BAAM,EAANA,MAAF;AAAUD,2BAAO,EAAPA,OAAV;AAAmBE,8BAAU,EAAVA;AAAnB;AAFsB,iBAAD,C;;;;AAAxBK,sB,SAAAA,M;AAKR,qBAAKZ,QAAL,CAAc;AACVD,2BAAS,EAAGc,IAAI,CAACC,KAAL,CAAWF,MAAM,CAAC,CAAD,CAAjB;AADF,iBAAd;;;;;;;;;;;;;;;;;;iCAMSG,M,EAAQ;AACjB,WAAKf,QAAL,CAAc;AACVJ,mBAAW,EAAE;AACTC,aAAG,EAAEkB,MAAM,CAAClB,GAAP,EADI;AAETC,aAAG,EAAEiB,MAAM,CAACjB,GAAP;AAFI;AADH,OAAd,EAKG,KAAKU,eALR;AAMH;;;6BAEQ;AAAA,UACGT,SADH,GACiB,KAAKJ,KADtB,CACGI,SADH;AAGL,aACI;AAAK,iBAAS,EAAC;AAAf,SACI,2DAAC,4CAAD;AAAK,sBAAc,EAAE,KAAKiB;AAA1B,QADJ,EAEI;AAAK,iBAAS,EAAC;AAAf,SACI;AAAK,iBAAS,EAAC;AAAf,SACI,uFADJ,EAEI,iFAAMC,UAAU,CAAClB,SAAD,CAAV,CAAsBmB,cAAtB,CAAqC,IAArC,CAAN,CAFJ,CADJ,CAFJ,CADJ;AAWH;;;;;;;;;;;EApEgBC,4CAAK,CAACC,S;;AAuE3B3B,MAAM,CAAC4B,SAAP,GAAmB;AACff,QAAM,EAAEgB,iDAAS,CAACC,MADH;AAEflB,SAAO,EAAEiB,iDAAS,CAACC,MAFJ;AAGfhB,YAAU,EAAEe,iDAAS,CAACC;AAHP,CAAnB;eAMe9B,M;AAAA;;;;;;;;;;0BA7ETA,M","file":"main.8e5756b5caff182b4d6e.hot-update.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Map from '../map';\n\nimport Predict from '../../utils/predict';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            currentArea: {\n                lat: 6.5005,\n                lng: 3.3666\n            },\n            areaPrice: 0,\n        }\n    }\n\n    componentDidMount () {    \n        this.setState({\n            areaPrice: window.__DATA__.singleAreaPrice,\n        });\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.no_bath !== prevProps.no_bath || \n            this.props.no_bed !== prevProps.no_bed ||\n            this.props.no_toilets !== prevProps.no_toilets) {\n            this.getAddressRange({\n                no_bed: this.props.no_bed,\n                no_bath: this.props.no_bath,\n                no_toilets: this.props.no_toilets\n            });\n        }\n    }\n    \n    async getAddressRange ({ no_bed, no_bath, no_toilets }) {\n        const { currentArea: { lat, lng }  } = this.state;\n    \n        const { prices } = await Predict({ \n            locations: [{ lat, lng }], \n            specs: { no_bed, no_bath, no_toilets }\n        });\n    \n        this.setState({\n            areaPrice:  Math.round(prices[0])\n        });\n    }\n    \n    \n    centerChange(center) {\n        this.setState({ \n            currentArea: {\n                lat: center.lat(),\n                lng: center.lng()\n            }\n        }, this.getAddressRange);\n    }\n\n    render() {\n        const { areaPrice } = this.state;\n\n        return (\n            <div className=\"col-lg-6 col-md-6 col-sm-6 hidden-xs\">\n                <Map onCenterChange={this.centerChange} />\n                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 input-container\">\n                    <div className=\"price-top\">\n                        <span>Total Cost:</span>\n                        <h4>â‚¦{parseFloat(areaPrice).toLocaleString('en')}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    no_bed: PropTypes.number, \n    no_bath: PropTypes.number,\n    no_toilets: PropTypes.number,\n};\n\nexport default Search;"],"sourceRoot":""}