{"version":3,"sources":["webpack:///./src/components/search/index.js"],"names":["Search","props","state","currentArea","lat","lng","areaPrice","getAddressRange","bind","centerChange","setState","window","__DATA__","singleAreaPrice","prevProps","no_bath","no_bed","no_toilets","Predict","locations","specs","prices","Math","round","center","parseFloat","toLocaleString","React","Component","propTypes","PropTypes","number"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;;IAEMA,M;;;;;AACF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,0MAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,iBAAW,EAAE;AACTC,WAAG,EAAE,MADI;AAETC,WAAG,EAAE;AAFI,OADJ;AAKTC,eAAS,EAAE;AALF,KAAb;AAQA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,iLAAvB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,iLAApB;AAZe;AAalB;;;;wCAEoB;AACjB,WAAKE,QAAL,CAAc;AACVJ,iBAAS,EAAEK,MAAM,CAACC,QAAP,CAAgBC;AADjB,OAAd;AAGH;;;uCAEkBC,S,EAAW;AAC1B,UAAI,KAAKb,KAAL,CAAWc,OAAX,KAAuBD,SAAS,CAACC,OAAjC,IACA,KAAKd,KAAL,CAAWe,MAAX,KAAsBF,SAAS,CAACE,MADhC,IAEA,KAAKf,KAAL,CAAWgB,UAAX,KAA0BH,SAAS,CAACG,UAFxC,EAEoD;AAChD,aAAKV,eAAL,CAAqB;AACjBS,gBAAM,EAAE,KAAKf,KAAL,CAAWe,MADF;AAEjBD,iBAAO,EAAE,KAAKd,KAAL,CAAWc,OAFH;AAGjBE,oBAAU,EAAE,KAAKhB,KAAL,CAAWgB;AAHN,SAArB;AAKH;AACJ;;;;;;;;;;;;;AAEwBD,sB,QAAAA,M,EAAQD,O,QAAAA,O,EAASE,U,QAAAA,U;wCACC,KAAKf,K,CAApCC,W,EAAeC,G,yBAAAA,G,EAAKC,G,yBAAAA,G;;uBAEHa,+DAAO,CAAC;AAC7BC,2BAAS,EAAE,CAAC;AAAEf,uBAAG,EAAHA,GAAF;AAAOC,uBAAG,EAAHA;AAAP,mBAAD,CADkB;AAE7Be,uBAAK,EAAE;AAAEJ,0BAAM,EAANA,MAAF;AAAUD,2BAAO,EAAPA,OAAV;AAAmBE,8BAAU,EAAVA;AAAnB;AAFsB,iBAAD,C;;;;AAAxBI,sB,SAAAA,M;AAKR,qBAAKX,QAAL,CAAc;AACVJ,2BAAS,EAAGgB,IAAI,CAACC,KAAL,CAAWF,MAAM,CAAC,CAAD,CAAjB;AADF,iBAAd;;;;;;;;;;;;;;;;;;iCAMSG,M,EAAQ;AACjB,WAAKd,QAAL,CAAc;AACVP,mBAAW,EAAE;AACTC,aAAG,EAAEoB,MAAM,CAACpB,GAAP,EADI;AAETC,aAAG,EAAEmB,MAAM,CAACnB,GAAP;AAFI;AADH,OAAd,EAKG,KAAKE,eALR;AAMH;;;6BAEQ;AAAA,UACGD,SADH,GACiB,KAAKJ,KADtB,CACGI,SADH;AAGL,aACI;AAAK,iBAAS,EAAC;AAAf,SACI,2DAAC,6CAAD;AAAK,sBAAc,EAAE,KAAKG;AAA1B,QADJ,EAEI;AAAK,iBAAS,EAAC;AAAf,SACI;AAAK,iBAAS,EAAC;AAAf,SACI,uFADJ,EAEI,iFAAMgB,UAAU,CAACnB,SAAD,CAAV,CAAsBoB,cAAtB,CAAqC,IAArC,CAAN,CAFJ,CADJ,CAFJ,CADJ;AAWH;;;;;;;;;;;EAvEgBC,4CAAK,CAACC,S;;AA0E3B5B,MAAM,CAAC6B,SAAP,GAAmB;AACfb,QAAM,EAAEc,iDAAS,CAACC,MADH;AAEfhB,SAAO,EAAEe,iDAAS,CAACC,MAFJ;AAGfd,YAAU,EAAEa,iDAAS,CAACC;AAHP,CAAnB;eAMe/B,M;AAAA;;;;;;;;;;0BAhFTA,M","file":"main.e47b243c1d1372c2bab8.hot-update.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Map from '../map';\n\nimport Predict from '../../utils/predict';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            currentArea: {\n                lat: 6.5005,\n                lng: 3.3666\n            },\n            areaPrice: 0,\n        }\n    \n        this.getAddressRange = this.getAddressRange.bind(this);\n        this.centerChange = this.centerChange.bind(this);\n    }\n\n    componentDidMount () {    \n        this.setState({\n            areaPrice: window.__DATA__.singleAreaPrice,\n        });\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.no_bath !== prevProps.no_bath || \n            this.props.no_bed !== prevProps.no_bed ||\n            this.props.no_toilets !== prevProps.no_toilets) {\n            this.getAddressRange({\n                no_bed: this.props.no_bed,\n                no_bath: this.props.no_bath,\n                no_toilets: this.props.no_toilets\n            });\n        }\n    }\n    \n    async getAddressRange ({ no_bed, no_bath, no_toilets }) {\n        const { currentArea: { lat, lng }  } = this.state;\n    \n        const { prices } = await Predict({ \n            locations: [{ lat, lng }], \n            specs: { no_bed, no_bath, no_toilets }\n        });\n    \n        this.setState({\n            areaPrice:  Math.round(prices[0])\n        });\n    }\n    \n    \n    centerChange(center) {\n        this.setState({ \n            currentArea: {\n                lat: center.lat(),\n                lng: center.lng()\n            }\n        }, this.getAddressRange);\n    }\n\n    render() {\n        const { areaPrice } = this.state;\n\n        return (\n            <div className=\"col-lg-6 col-md-6 col-sm-6 hidden-xs\">\n                <Map onCenterChange={this.centerChange} />\n                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 input-container\">\n                    <div className=\"price-top\">\n                        <span>Total Cost:</span>\n                        <h4>â‚¦{parseFloat(areaPrice).toLocaleString('en')}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    no_bed: PropTypes.number, \n    no_bath: PropTypes.number,\n    no_toilets: PropTypes.number,\n};\n\nexport default Search;"],"sourceRoot":""}