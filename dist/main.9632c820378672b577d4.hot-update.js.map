{"version":3,"sources":["webpack:///./src/components/search/index.js"],"names":["Search","props","getAreasRange","state","no_bed","no_bath","no_toilets","mode","Predict","locations","areas","map","lat","lng","specs","prices","setState","P","Math","round","getAddressRange","tno_bed","tno_bath","tno_toilets","currentArea","areaPrice","updateOption","e","topFilter","name","target","value","setTimeout","handleChange","centerChange","center","sort","majorAreasData","type","pairAreaPrice","A","i","a","p","sortedPairs","b","sp","parseFloat","toLocaleString","React","Component"],"mappings":"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","file":"main.9632c820378672b577d4.hot-update.js","sourcesContent":["import React from 'react';\nimport Map from '../map';\n\nimport majorAreasData from '../../areas';\n\nimport Predict from '../../utils/predict';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            currentArea: {\n                lat: 6.5005,\n                lng: 3.3666\n            },\n            prices: [],\n            areaPrice: 0,\n            mode: true,\n            sort: 'high',\n        }\n    }\n    \n    componentDidMount () {\n        this.setState({\n            areas: majorAreasData()\n        }, () => {\n            this.getAddressRange();\n            this.getAreasRange();\n        });\n    }\n    \n    getAreasRange = async () => {\n        const { no_bed, no_bath, no_toilets, mode } = this.state;\n    \n        const { prices } = await Predict({ \n            locations: this.state.areas.map(({ lat, lng }) => ({ lat, lng })), \n            specs: { no_bed, no_bath, no_toilets }\n        }, mode);\n    \n        this.setState({\n            prices: prices.map((P) => Math.round(P))\n        });\n    }\n    \n    getAddressRange = async () => {\n        const { tno_bed: no_bed, tno_bath: no_bath, tno_toilets: no_toilets, currentArea: { lat, lng }, mode } = this.state;\n    \n        const { prices } = await Predict({ \n            locations: [{ lat, lng }], \n            specs: { no_bed, no_bath, no_toilets }\n        }, mode);\n    \n        this.setState({\n            areaPrice:  Math.round(prices[0])\n        });\n    }\n    \n    updateOption = (e, topFilter) => {\n        let name = (!topFilter) ? e.target.name : `t${e.target.name}`;\n        let value = e.target.value; \n    \n        this.setState({\n            [name]: value\n        }, () => {\n            setTimeout(\n                (!topFilter) ? this.getAreasRange : this.getAddressRange\n            , 500);\n        });\n    }\n    \n    handleChange = () => {\n        this.setState({\n            mode: !this.state.mode\n        }, () => {\n            this.getAddressRange();\n            this.getAreasRange();\n        });\n    }\n    \n    centerChange = center => {\n        this.setState({ \n            currentArea: {\n                lat: center.lat(),\n                lng: center.lng()\n            }\n        }, this.getAddressRange);\n    }\n    \n    sort (type) {\n        let pairAreaPrice = this.state.areas.map((A, i)=> ({ a: A, p: this.state.prices[i]}))\n        \n        let sortedPairs = (type !== 'high') ? \n            pairAreaPrice.sort((a, b) => a.p - b.p) : \n            pairAreaPrice.sort((a, b) => b.p - a.p);\n    \n        this.setState({\n            prices: sortedPairs.map((sp) => sp.p),\n            areas: sortedPairs.map((sp) => sp.a)\n        });\n    }\n\n    render() {\n        const { areaPrice } = this.state;\n\n        return (\n            <div className=\"col-lg-6 col-md-6 col-sm-6 hidden-xs\">\n                <Map onCenterChange={this.centerChange} />\n                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 input-container\">\n                    <div className=\"price-top\">\n                        <span>Total Cost:</span>\n                        <h4>â‚¦{parseFloat(areaPrice).toLocaleString('en')}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Search;"],"sourceRoot":""}