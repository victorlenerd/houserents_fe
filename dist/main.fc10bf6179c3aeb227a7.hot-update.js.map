{"version":3,"sources":["webpack:///./src/components/map/index.js"],"names":["require","SearchBox","Map","compose","withProps","googleMapURL","process","containerElement","height","width","paddingTop","paddingBottom","loadingElement","mapElement","center","lat","lng","lifecycle","componentWillMount","refs","setState","onMapMounted","ref","map","onSearchBoxMounted","searchBox","onPlacesChanged","places","getPlaces","length","place","geometry","location","panTo","props","onCenterChange","withScriptjs","withGoogleMap","disableDefaultUI","window","google","maps","ControlPosition","TOP_CENTER","winddow","LatLng","boxSizing","border","marginLeft","marginTop","padding","borderRadius","boxShadow","fontSize","outline","textOverflow","onToggleOpen"],"mappings":"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","file":"main.fc10bf6179c3aeb227a7.hot-update.js","sourcesContent":["import React from 'react';\nimport { compose, withProps, lifecycle }  from \"recompose\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\n\nconst { SearchBox } = require(\"react-google-maps/lib/components/places/SearchBox\");\n\nconst Map = compose(\n    withProps({\n      googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${process.env.MAP_API_KEY}&v=3.exp&libraries=places`,\n      containerElement: <div className=\"input-container hidden-xs\" style={{ height: `400px`, width: '100%', paddingTop: 0, paddingBottom: 0 }} />,\n      loadingElement: <div style={{ height: `400px` }} />,\n      mapElement: <div style={{ height: `400px` }} />,\n      center: { lat: 25.03, lng: 121.6 },\n    }),\n    lifecycle({\n        componentWillMount() {\n          const refs = {}\n        \n          this.setState({\n            center: {\n                lat: 6.5005, lng: 3.3666\n            },\n            onMapMounted: ref => {\n              refs.map = ref;\n            },\n            onSearchBoxMounted: ref => {\n              refs.searchBox = ref;\n            },\n            onPlacesChanged: () => {\n                const places = refs.searchBox.getPlaces();\n\n                if (places.length > 0) {\n                    const place = places[0].geometry.location;\n                    refs.map.panTo(place);\n                    this.props.onCenterChange(place);\n                    this.setState({\n                      center: place\n                    });\n                }\n            }\n          })\n        },\n      }),\n    withScriptjs,\n    withGoogleMap\n)(props =>\n    <GoogleMap\n        ref={props.onMapMounted}\n        defaultZoom={15}\n        defaultOptions={{\n          disableDefaultUI: true,\n        }}\n        defaultCenter={props.center}>\n        <SearchBox\n            ref={props.onSearchBoxMounted}\n            controlPosition={window.google.maps.ControlPosition.TOP_CENTER}\n            onPlacesChanged={props.onPlacesChanged}\n            bounds={new winddow.google.maps.LatLng(6.6080, 3.6218)}\n        >\n        <input\n          type=\"text\"\n          placeholder=\"Find apartments nearest to places like work.\"\n          style={{\n            boxSizing: `border-box`,\n            border: `1px solid transparent`,\n            width: `90%`,\n            height: `50px`,\n            marginLeft: `10px`,\n            marginTop: `10px`,\n            padding: `0 12px`,\n            borderRadius: `3px`,\n            boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n            fontSize: `14px`,\n            outline: `none`,\n            textOverflow: `ellipses`,\n          }}\n        />\n      </SearchBox>\n        <Marker\n            position={props.center}\n            onClick={props.onToggleOpen}\n        >\n        </Marker>\n    </GoogleMap>\n);\n\nexport default Map"],"sourceRoot":""}