{"version":3,"sources":["webpack:///./src/components/search/index.js"],"names":["Search","props","getAddressRange","state","no_bed","tno_bed","no_bath","tno_bath","no_toilets","tno_toilets","currentArea","lat","lng","mode","Predict","locations","specs","prices","setState","areaPrice","Math","round","areas","majorAreasData","e","topFilter","name","target","value","setTimeout","getAreasRange","center","type","pairAreaPrice","map","A","i","a","p","sortedPairs","sort","b","sp","centerChange","parseFloat","toLocaleString","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;;IAEMA,M;;;;;AACF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,0MAAMA,KAAN;AADe,UAoBnBC,eApBmB;AAAA;AAAA;AAAA;AAAA,2EAoBD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BAC2F,MAAKC,KADhG,EACGC,MADH,eACNC,OADM,EACqBC,OADrB,eACWC,QADX,EAC2CC,UAD3C,eAC8BC,WAD9B,sCACuDC,WADvD,EACsEC,GADtE,yBACsEA,GADtE,EAC2EC,GAD3E,yBAC2EA,GAD3E,EACkFC,IADlF,eACkFA,IADlF;AAAA;AAAA,qBAGWC,+DAAO,CAAC;AAC7BC,yBAAS,EAAE,CAAC;AAAEJ,qBAAG,EAAHA,GAAF;AAAOC,qBAAG,EAAHA;AAAP,iBAAD,CADkB;AAE7BI,qBAAK,EAAE;AAAEZ,wBAAM,EAANA,MAAF;AAAUE,yBAAO,EAAPA,OAAV;AAAmBE,4BAAU,EAAVA;AAAnB;AAFsB,eAAD,EAG7BK,IAH6B,CAHlB;;AAAA;AAAA;AAGNI,oBAHM,SAGNA,MAHM;;AAQd,oBAAKC,QAAL,CAAc;AACVC,yBAAS,EAAGC,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAAC,CAAD,CAAjB;AADF,eAAd;;AARc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KApBC;AAGf,UAAKd,KAAL,GAAa;AACTO,iBAAW,EAAE;AACTC,WAAG,EAAE,MADI;AAETC,WAAG,EAAE;AAFI,OADJ;AAKTO,eAAS,EAAE;AALF,KAAb;AAHe;AAUlB;;;;wCAEoB;AAAA;;AACjB,WAAKD,QAAL,CAAc;AACVI,aAAK,EAAEC,uDAAc;AADX,OAAd,EAEG,YAAM;AACL,cAAI,CAACrB,eAAL;AACH,OAJD;AAKH;;;iCAeYsB,C,EAAGC,S,EAAW;AAAA;;AACvB,UAAIC,IAAI,GAAI,CAACD,SAAF,GAAeD,CAAC,CAACG,MAAF,CAASD,IAAxB,cAAmCF,CAAC,CAACG,MAAF,CAASD,IAA5C,CAAX;AACA,UAAIE,KAAK,GAAGJ,CAAC,CAACG,MAAF,CAASC,KAArB;AAEA,WAAKV,QAAL,kFACKQ,IADL,EACYE,KADZ,GAEG,YAAM;AACLC,kBAAU,CACL,CAACJ,SAAF,GAAe,MAAI,CAACK,aAApB,GAAoC,MAAI,CAAC5B,eADnC,EAER,GAFQ,CAAV;AAGH,OAND;AAOH;;;mCAEc;AAAA;;AACX,WAAKgB,QAAL,CAAc;AACVL,YAAI,EAAE,CAAC,KAAKV,KAAL,CAAWU;AADR,OAAd,EAEG,YAAM;AACL,cAAI,CAACX,eAAL;;AACA,cAAI,CAAC4B,aAAL;AACH,OALD;AAMH;;;iCAEYC,M,EAAQ;AACjB,WAAKb,QAAL,CAAc;AACVR,mBAAW,EAAE;AACTC,aAAG,EAAEoB,MAAM,CAACpB,GAAP,EADI;AAETC,aAAG,EAAEmB,MAAM,CAACnB,GAAP;AAFI;AADH,OAAd,EAKG,KAAKV,eALR;AAMH;;;yBAEI8B,I,EAAM;AAAA;;AACP,UAAIC,aAAa,GAAG,KAAK9B,KAAL,CAAWmB,KAAX,CAAiBY,GAAjB,CAAqB,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAU;AAAEC,WAAC,EAAEF,CAAL;AAAQG,WAAC,EAAE,MAAI,CAACnC,KAAL,CAAWc,MAAX,CAAkBmB,CAAlB;AAAX,SAAV;AAAA,OAArB,CAApB;AAEA,UAAIG,WAAW,GAAIP,IAAI,KAAK,MAAV,GACdC,aAAa,CAACO,IAAd,CAAmB,UAACH,CAAD,EAAII,CAAJ;AAAA,eAAUJ,CAAC,CAACC,CAAF,GAAMG,CAAC,CAACH,CAAlB;AAAA,OAAnB,CADc,GAEdL,aAAa,CAACO,IAAd,CAAmB,UAACH,CAAD,EAAII,CAAJ;AAAA,eAAUA,CAAC,CAACH,CAAF,GAAMD,CAAC,CAACC,CAAlB;AAAA,OAAnB,CAFJ;AAIA,WAAKpB,QAAL,CAAc;AACVD,cAAM,EAAEsB,WAAW,CAACL,GAAZ,CAAgB,UAACQ,EAAD;AAAA,iBAAQA,EAAE,CAACJ,CAAX;AAAA,SAAhB,CADE;AAEVhB,aAAK,EAAEiB,WAAW,CAACL,GAAZ,CAAgB,UAACQ,EAAD;AAAA,iBAAQA,EAAE,CAACL,CAAX;AAAA,SAAhB;AAFG,OAAd;AAIH;;;6BAEQ;AAAA,UACGlB,SADH,GACiB,KAAKhB,KADtB,CACGgB,SADH;AAGL,aACI;AAAK,iBAAS,EAAC;AAAf,SACI,2DAAC,4CAAD;AAAK,sBAAc,EAAE,KAAKwB;AAA1B,QADJ,EAEI;AAAK,iBAAS,EAAC;AAAf,SACI;AAAK,iBAAS,EAAC;AAAf,SACI,uFADJ,EAEI,iFAAMC,UAAU,CAACzB,SAAD,CAAV,CAAsB0B,cAAtB,CAAqC,IAArC,CAAN,CAFJ,CADJ,CAFJ,CADJ;AAWH;;;;;;;;;;;EA5FgBC,4CAAK,CAACC,S;;eA+FZ/C,M;AAAA;;;;;;;;;;0BA/FTA,M","file":"main.e548554330541e2e4c0b.hot-update.js","sourcesContent":["import React from 'react';\nimport Map from '../map';\n\nimport majorAreasData from '../../areas';\n\nimport Predict from '../../utils/predict';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            currentArea: {\n                lat: 6.5005,\n                lng: 3.3666\n            },\n            areaPrice: 0,\n        }\n    }\n    \n    componentDidMount () {\n        this.setState({\n            areas: majorAreasData()\n        }, () => {\n            this.getAddressRange();\n        });\n    }\n    \n    getAddressRange = async () => {\n        const { tno_bed: no_bed, tno_bath: no_bath, tno_toilets: no_toilets, currentArea: { lat, lng }, mode } = this.state;\n    \n        const { prices } = await Predict({ \n            locations: [{ lat, lng }], \n            specs: { no_bed, no_bath, no_toilets }\n        }, mode);\n    \n        this.setState({\n            areaPrice:  Math.round(prices[0])\n        });\n    }\n    \n    updateOption(e, topFilter) {\n        let name = (!topFilter) ? e.target.name : `t${e.target.name}`;\n        let value = e.target.value; \n    \n        this.setState({\n            [name]: value\n        }, () => {\n            setTimeout(\n                (!topFilter) ? this.getAreasRange : this.getAddressRange\n            , 500);\n        });\n    }\n    \n    handleChange() {\n        this.setState({\n            mode: !this.state.mode\n        }, () => {\n            this.getAddressRange();\n            this.getAreasRange();\n        });\n    }\n    \n    centerChange(center) {\n        this.setState({ \n            currentArea: {\n                lat: center.lat(),\n                lng: center.lng()\n            }\n        }, this.getAddressRange);\n    }\n    \n    sort(type) {\n        let pairAreaPrice = this.state.areas.map((A, i)=> ({ a: A, p: this.state.prices[i]}))\n        \n        let sortedPairs = (type !== 'high') ? \n            pairAreaPrice.sort((a, b) => a.p - b.p) : \n            pairAreaPrice.sort((a, b) => b.p - a.p);\n    \n        this.setState({\n            prices: sortedPairs.map((sp) => sp.p),\n            areas: sortedPairs.map((sp) => sp.a)\n        });\n    }\n\n    render() {\n        const { areaPrice } = this.state;\n\n        return (\n            <div className=\"col-lg-6 col-md-6 col-sm-6 hidden-xs\">\n                <Map onCenterChange={this.centerChange} />\n                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 input-container\">\n                    <div className=\"price-top\">\n                        <span>Total Cost:</span>\n                        <h4>â‚¦{parseFloat(areaPrice).toLocaleString('en')}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Search;"],"sourceRoot":""}