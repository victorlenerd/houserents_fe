{"version":3,"sources":["webpack:///./src/components/areas/index.js"],"names":["Areas","props","state","currentArea","lat","lng","prices","areaPrice","getAreasRange","bind","sort","setState","areas","majorAreasData","prevProps","no_bath","no_bed","no_toilets","Predict","locations","map","specs","P","Math","round","type","pairAreaPrice","A","i","a","p","sortedPairs","b","sp","length","parsedPrice","parseFloat","name","toLocaleString","React","Component","propTypes","PropTypes","number","string"],"mappings":"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","file":"main.4f277f7ddbae14b3097c.hot-update.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport majorAreasData from '../../areas';\n\nimport Predict from '../../utils/predict';\n\nclass Areas extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            currentArea: {\n                lat: 6.5005,\n                lng: 3.3666\n            },\n            prices: [],\n            areaPrice: 0,\n        }\n\n        this.getAreasRange = this.getAreasRange.bind(this);\n        this.sort = this.sort.bind(this);\n    }\n    \n    componentDidMount () {    \n        this.setState({\n            areas: majorAreasData()\n        }, () => {\n            this.getAreasRange();\n        });\n    }\n\n    componentDidUpdate(prevProps) {\n        if  (this.props.sort !== prevProps.sort) {\n            this.sort(this.props.sort);\n        }\n\n        if (this.props.no_bath !== prevProps.no_bath && \n            this.props.no_bed !== prevProps.no_bed && \n            this.props.no_toilets !== prevProps.no_toilets) {\n            this.getAreasRange();\n        }\n    }\n    \n    async getAreasRange() {\n        const { no_bed, no_bath, no_toilets } = this.props;\n\n        const { prices } = await Predict({\n            locations: this.state.areas.map(({ lat, lng }) => ({ lat, lng })), \n            specs: { no_bed, no_bath, no_toilets }\n        });\n    \n        this.setState({\n            prices: prices.map((P) => Math.round(P))\n        });\n    }\n    \n    sort(type) {\n        let pairAreaPrice = this.state.areas.map((A, i)=> ({ a: A, p: this.state.prices[i]}))\n        \n        let sortedPairs = (type !== 'high') ? \n            pairAreaPrice.sort((a, b) => a.p - b.p) : \n            pairAreaPrice.sort((a, b) => b.p - a.p);\n\n        this.setState({\n            prices: sortedPairs.map((sp) => sp.p),\n            areas: sortedPairs.map((sp) => sp.a)\n        });\n    }\n\n    render() {\n        const { areas, prices } = this.state;\n\n        return (\n            <div className=\"input-container col-lg-6 col-md-6 col-sm-6 col-xs-12\">        \n                {prices.length > 1 && <ul className=\"areas-list\" type=\"none\">\n                    {areas.map((a, i) => {\n                        const parsedPrice = parseFloat(prices[i]);\n                        \n                        if (parsedPrice < 1) return null;\n\n                        return (\n                            <li key={i}>\n                                {a.name}\n                                <div className=\"price\">\n                                    <span>â‚¦{parsedPrice.toLocaleString('en')}</span>\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>}\n            </div>\n        );\n    }\n}\n\nAreas.propTypes = {\n    no_bed: PropTypes.number, \n    no_bath: PropTypes.number,\n    no_toilets: PropTypes.number,\n    sort: PropTypes.string\n}\n\nexport default Areas;"],"sourceRoot":""}