{"version":3,"sources":["webpack:///./src/components/search/index.js"],"names":["Search","props","state","currentArea","lat","lng","searchText","areaPrice","getAddressRange","bind","centerChange","setState","window","__DATA__","singleAreaPrice","prevProps","no_bath","no_bed","no_toilets","Predict","locations","specs","prices","Math","round","center","color","parseFloat","toLocaleString","React","Component","propTypes","PropTypes","number","hot","module"],"mappings":"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","file":"main.b4d0ffd62fef0a0e3276.hot-update.js","sourcesContent":["import React from 'react';\nimport { hot } from \"react-hot-loader\";\nimport PropTypes from 'prop-types';\nimport Map from '../map';\n\nimport Predict from '../../utils/predict';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            currentArea: {\n                lat: 6.5005,\n                lng: 3.3666\n            },\n            searchText: 'Yaba, Lagos, Nigeria',\n            areaPrice: 0,\n        }\n    \n        this.getAddressRange = this.getAddressRange.bind(this);\n        this.centerChange = this.centerChange.bind(this);\n    }\n\n    componentDidMount () {    \n        this.setState({\n            areaPrice: window.__DATA__.singleAreaPrice,\n        });\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.no_bath !== prevProps.no_bath || \n            this.props.no_bed !== prevProps.no_bed ||\n            this.props.no_toilets !== prevProps.no_toilets) {\n            this.getAddressRange(this.props.no_bed, this.props.no_bath, this.props.no_toilets);\n        }\n    }\n    \n    async getAddressRange (no_bed = 1, no_bath = 1, no_toilets = 1) {\n        const { currentArea: { lat, lng }  } = this.state;\n    \n        const { prices } = await Predict({\n            locations: [{ lat, lng }], \n            specs: { no_bed, no_bath, no_toilets }\n        });\n    \n        this.setState({\n            areaPrice:  Math.round(prices[0])\n        });\n    }\n    \n    \n    centerChange(center, searchText) {\n        this.setState({ \n            currentArea: {\n                lat: center.lat(),\n                lng: center.lng()\n            },\n            searchText\n        }, this.getAddressRange);\n    }\n\n    render() {\n        const { areaPrice, searchText } = this.state;\n        const { no_bed, no_bath, no_toilets } = this.props;\n        return (\n            <div className=\"col-lg-6 col-md-6 col-sm-6 hidden-xs\">\n                <Map onCenterChange={this.centerChange} />\n                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 input-container\">\n                    <div className=\"price-top\">\n                        <span style={{ color: '#000' }}>Average cost to rent {no_bed} bed, {no_bath} bath and {no_toilets} toilets within {searchText} area</span>\n                        <h2>â‚¦{parseFloat(areaPrice).toLocaleString('en')}</h2>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    no_bed: PropTypes.number, \n    no_bath: PropTypes.number,\n    no_toilets: PropTypes.number,\n};\n\nexport default hot(module)(Search);"],"sourceRoot":""}